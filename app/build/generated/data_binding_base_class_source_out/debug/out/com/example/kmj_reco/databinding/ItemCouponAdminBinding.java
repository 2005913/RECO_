// Generated by view binder compiler. Do not edit!
package com.example.kmj_reco.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.kmj_reco.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCouponAdminBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button adminDeleteButton;

  @NonNull
  public final Button adminModiButton;

  @NonNull
  public final ImageView gifticonImage;

  @NonNull
  public final TextView gifticonName;

  @NonNull
  public final TextView gifticonStock;

  private ItemCouponAdminBinding(@NonNull LinearLayout rootView, @NonNull Button adminDeleteButton,
      @NonNull Button adminModiButton, @NonNull ImageView gifticonImage,
      @NonNull TextView gifticonName, @NonNull TextView gifticonStock) {
    this.rootView = rootView;
    this.adminDeleteButton = adminDeleteButton;
    this.adminModiButton = adminModiButton;
    this.gifticonImage = gifticonImage;
    this.gifticonName = gifticonName;
    this.gifticonStock = gifticonStock;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCouponAdminBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCouponAdminBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_coupon_admin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCouponAdminBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adminDeleteButton;
      Button adminDeleteButton = rootView.findViewById(id);
      if (adminDeleteButton == null) {
        break missingId;
      }

      id = R.id.adminModiButton;
      Button adminModiButton = rootView.findViewById(id);
      if (adminModiButton == null) {
        break missingId;
      }

      id = R.id.gifticonImage;
      ImageView gifticonImage = rootView.findViewById(id);
      if (gifticonImage == null) {
        break missingId;
      }

      id = R.id.gifticonName;
      TextView gifticonName = rootView.findViewById(id);
      if (gifticonName == null) {
        break missingId;
      }

      id = R.id.gifticonStock;
      TextView gifticonStock = rootView.findViewById(id);
      if (gifticonStock == null) {
        break missingId;
      }

      return new ItemCouponAdminBinding((LinearLayout) rootView, adminDeleteButton, adminModiButton,
          gifticonImage, gifticonName, gifticonStock);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
