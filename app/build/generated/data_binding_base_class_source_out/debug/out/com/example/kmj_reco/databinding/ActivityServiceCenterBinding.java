// Generated by view binder compiler. Do not edit!
package com.example.kmj_reco.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.kmj_reco.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityServiceCenterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton btnBack;

  @NonNull
  public final Button btnHistory;

  @NonNull
  public final Button btnSubmit;

  @NonNull
  public final EditText etContent;

  @NonNull
  public final EditText etTitle;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TitleBarBinding titleBar;

  private ActivityServiceCenterBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton btnBack, @NonNull Button btnHistory, @NonNull Button btnSubmit,
      @NonNull EditText etContent, @NonNull EditText etTitle, @NonNull TextView textView4,
      @NonNull TitleBarBinding titleBar) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnHistory = btnHistory;
    this.btnSubmit = btnSubmit;
    this.etContent = etContent;
    this.etTitle = etTitle;
    this.textView4 = textView4;
    this.titleBar = titleBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityServiceCenterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityServiceCenterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_service_center, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityServiceCenterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back;
      ImageButton btnBack = rootView.findViewById(id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btn_history;
      Button btnHistory = rootView.findViewById(id);
      if (btnHistory == null) {
        break missingId;
      }

      id = R.id.btn_submit;
      Button btnSubmit = rootView.findViewById(id);
      if (btnSubmit == null) {
        break missingId;
      }

      id = R.id.et_content;
      EditText etContent = rootView.findViewById(id);
      if (etContent == null) {
        break missingId;
      }

      id = R.id.et_title;
      EditText etTitle = rootView.findViewById(id);
      if (etTitle == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = rootView.findViewById(id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.title_bar;
      View titleBar = rootView.findViewById(id);
      if (titleBar == null) {
        break missingId;
      }
      TitleBarBinding binding_titleBar = TitleBarBinding.bind(titleBar);

      return new ActivityServiceCenterBinding((ConstraintLayout) rootView, btnBack, btnHistory,
          btnSubmit, etContent, etTitle, textView4, binding_titleBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
