// Generated by view binder compiler. Do not edit!
package com.example.kmj_reco.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.SearchView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.kmj_reco.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCouponAdminBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button couponAdminPlusbtn;

  @NonNull
  public final ListView gifticonListViewAdmin;

  @NonNull
  public final SearchView gifticonSearchView;

  @NonNull
  public final TitleBarBinding titleBar;

  private ActivityCouponAdminBinding(@NonNull LinearLayout rootView,
      @NonNull Button couponAdminPlusbtn, @NonNull ListView gifticonListViewAdmin,
      @NonNull SearchView gifticonSearchView, @NonNull TitleBarBinding titleBar) {
    this.rootView = rootView;
    this.couponAdminPlusbtn = couponAdminPlusbtn;
    this.gifticonListViewAdmin = gifticonListViewAdmin;
    this.gifticonSearchView = gifticonSearchView;
    this.titleBar = titleBar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCouponAdminBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCouponAdminBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_coupon_admin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCouponAdminBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.couponAdminPlusbtn;
      Button couponAdminPlusbtn = rootView.findViewById(id);
      if (couponAdminPlusbtn == null) {
        break missingId;
      }

      id = R.id.gifticon_listView_admin;
      ListView gifticonListViewAdmin = rootView.findViewById(id);
      if (gifticonListViewAdmin == null) {
        break missingId;
      }

      id = R.id.gifticon_searchView;
      SearchView gifticonSearchView = rootView.findViewById(id);
      if (gifticonSearchView == null) {
        break missingId;
      }

      id = R.id.title_bar;
      View titleBar = rootView.findViewById(id);
      if (titleBar == null) {
        break missingId;
      }
      TitleBarBinding binding_titleBar = TitleBarBinding.bind(titleBar);

      return new ActivityCouponAdminBinding((LinearLayout) rootView, couponAdminPlusbtn,
          gifticonListViewAdmin, gifticonSearchView, binding_titleBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
