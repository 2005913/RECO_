// Generated by view binder compiler. Do not edit!
package com.example.kmj_reco.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.kmj_reco.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BuyCouponBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button btnN;

  @NonNull
  public final ImageButton btnX;

  @NonNull
  public final Button btnY;

  @NonNull
  public final ConstraintLayout cstLy;

  @NonNull
  public final TextView gifticonBuyPriceText;

  @NonNull
  public final TextView gifticonBuyText;

  private BuyCouponBinding(@NonNull FrameLayout rootView, @NonNull Button btnN,
      @NonNull ImageButton btnX, @NonNull Button btnY, @NonNull ConstraintLayout cstLy,
      @NonNull TextView gifticonBuyPriceText, @NonNull TextView gifticonBuyText) {
    this.rootView = rootView;
    this.btnN = btnN;
    this.btnX = btnX;
    this.btnY = btnY;
    this.cstLy = cstLy;
    this.gifticonBuyPriceText = gifticonBuyPriceText;
    this.gifticonBuyText = gifticonBuyText;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BuyCouponBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BuyCouponBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.buy_coupon, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BuyCouponBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_n;
      Button btnN = rootView.findViewById(id);
      if (btnN == null) {
        break missingId;
      }

      id = R.id.btn_x;
      ImageButton btnX = rootView.findViewById(id);
      if (btnX == null) {
        break missingId;
      }

      id = R.id.btn_y;
      Button btnY = rootView.findViewById(id);
      if (btnY == null) {
        break missingId;
      }

      id = R.id.cstLy;
      ConstraintLayout cstLy = rootView.findViewById(id);
      if (cstLy == null) {
        break missingId;
      }

      id = R.id.gifticon_buy_price_text;
      TextView gifticonBuyPriceText = rootView.findViewById(id);
      if (gifticonBuyPriceText == null) {
        break missingId;
      }

      id = R.id.gifticon_buy_text;
      TextView gifticonBuyText = rootView.findViewById(id);
      if (gifticonBuyText == null) {
        break missingId;
      }

      return new BuyCouponBinding((FrameLayout) rootView, btnN, btnX, btnY, cstLy,
          gifticonBuyPriceText, gifticonBuyText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
