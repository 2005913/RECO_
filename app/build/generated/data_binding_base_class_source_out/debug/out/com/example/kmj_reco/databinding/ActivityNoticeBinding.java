// Generated by view binder compiler. Do not edit!
package com.example.kmj_reco.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.kmj_reco.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNoticeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton btnEvent;

  @NonNull
  public final ListView notice2ListView;

  @NonNull
  public final NoticeBar2Binding noticeBar;

  @NonNull
  public final TextView textView14;

  private ActivityNoticeBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton btnEvent,
      @NonNull ListView notice2ListView, @NonNull NoticeBar2Binding noticeBar,
      @NonNull TextView textView14) {
    this.rootView = rootView;
    this.btnEvent = btnEvent;
    this.notice2ListView = notice2ListView;
    this.noticeBar = noticeBar;
    this.textView14 = textView14;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNoticeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNoticeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_notice, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNoticeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_event;
      ImageButton btnEvent = rootView.findViewById(id);
      if (btnEvent == null) {
        break missingId;
      }

      id = R.id.notice2ListView;
      ListView notice2ListView = rootView.findViewById(id);
      if (notice2ListView == null) {
        break missingId;
      }

      id = R.id.notice_bar;
      View noticeBar = rootView.findViewById(id);
      if (noticeBar == null) {
        break missingId;
      }
      NoticeBar2Binding binding_noticeBar = NoticeBar2Binding.bind(noticeBar);

      id = R.id.textView14;
      TextView textView14 = rootView.findViewById(id);
      if (textView14 == null) {
        break missingId;
      }

      return new ActivityNoticeBinding((ConstraintLayout) rootView, btnEvent, notice2ListView,
          binding_noticeBar, textView14);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
